app:
  # Should be the same as backend.baseUrl when using the `app-backend` plugin.
  baseUrl: ${BASE_URL}:${BASE_URL_PORT}


integrations:
  gitlab:
    - host: ${GITLAB_HOST}
      apiBaseUrl: https://${GITLAB_HOST}/api/v4
      token: ${GITLAB_TOKEN}
      baseUrl: https://${GITLAB_HOST}

gitlab:
  proxySecure: false 

auth:
  providers:
    gitlab:
      development:
        clientId: ${AUTH_GITLAB_CLIENT_ID}
        clientSecret: ${AUTH_GITLAB_CLIENT_SECRET}
        audience: https://${GITLAB_HOST}
        callbackUrl: ${BASE_URL}:${BASE_URL_PORT}/api/auth/gitlab/handler/frame

sonarqube:
  baseUrl: ${SONAR_URL}
  apiKey: ${SONAR_TOKEN}

backend:
  # Note that the baseUrl should be the URL that the browser and other clients
  # should use when communicating with the backend, i.e. it needs to be
  # reachable not just from within the backend host, but from all of your
  # callers. When its value is "http://localhost:7007", it's strictly private
  # and can't be reached by others.
  baseUrl: ${BASE_URL}
  reading:
    allow:
      - host: '*.custom.com.br'
  # The listener can also be expressed as a single <host>:<port> string. In this case we bind to
  # all interfaces, the most permissive setting. The right value depends on your specific deployment.
  listen: ':7007'
  cors:
    origin: 
    - ${BASE_URL}
    - https://${GITLAB_HOST}
    - ${SONAR_URL}
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE, OPTIONS]
    credentials: true
  # config options: https://node-postgres.com/api/client
  database:
    client: pg
    connection: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DATABASE}
    pluginDivisionMode: schema
    prefix: 'backstage_dev_'
      # https://node-postgres.com/features/ssl
      # you can set the sslmode configuration option via the `PGSSLMODE` environment variable
      # see https://www.postgresql.org/docs/current/libpq-ssl.html Table 33.1. SSL Mode Descriptions (e.g. require)
      # ssl:
      #   ca: # if you have a CA file and want to verify it you can uncomment this section
      #     $file: <file-path>/ca/server.crt

catalog:
  rules:
    - allow: 
      - Component
      - API
      - Resource
      - System
      - Domain
      - Location
      - Template
      - Group
      - User
  providers:
    gitlab:
      gitlabcorp:
        host: ${GITLAB_HOST}
        branch: master
        fallbackBranch: main
        skipForkedRepos: true
        group: unj
        entityFilename: catalog-info.yaml
        projectPattern: '[\s\S]*'
        rules:
          - allow: 
            - Component
            - API
            - Resource
            - System
            - Domain
            - Location
            - Template
            - Group
            - User

  # Overrides the default list locations from app-config.yaml as these contain example data.
  # See https://backstage.io/docs/features/software-catalog/#adding-components-to-the-catalog for more details
  # on how to get entities into the catalog.
  locations: []
